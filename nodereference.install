<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function nodereference_install() {
  content_notify('install', 'nodereference');
}

/**
 * Implementation of hook_uninstall().
 */
function nodereference_uninstall() {
  content_notify('uninstall', 'nodereference');
}

/**
 * Implementation of hook_enable().
 *
 * Notify content module when this module is enabled.
 */
function nodereference_enable() {
  content_notify('enable', 'nodereference');
}

/**
 * Implementation of hook_disable().
 *
 * Notify content module when this module is disabled.
 */
function nodereference_disable() {
  content_notify('disable', 'nodereference');
}

/**
 * Add node ID column so we can delete old revisions at node delete time.
 */
function nodereference_update_1() {
  $ret = array();
  if (!db_table_exists('node_field_nodereference_data')) {
   return $ret;
  }
  db_add_field($ret, 'node_field_nodereference_data', 'nid', array('type' => 'int', 'not null' => TRUE, 'default' => 0));
  return $ret;
}

/**
 * Populate nid column in existing node reference fields.
 */
function nodereference_update_2() {
  $ret = array();
  if (!db_table_exists('node_field_nodereference_data')) {
   return $ret;
  }
  // Multi-part update
  if (!isset($_SESSION['nodereference_update_2'])) {
    $_SESSION['nodereference_update_2'] = 0;
    $_SESSION['nodereference_update_2_max'] = db_result(db_query("SELECT COUNT(*) FROM {node_field_nodereference_data}"));;
  }

  $limit = 20;
  $result = db_query_range("SELECT nr.nid, nfnd.vid, nfnd.field_name, nfnd.delta FROM {node_field_nodereference_data} nfnd LEFT JOIN {node_revisions} nr ON nr.vid = nfnd.vid", $_SESSION['nodereference_update_2'], $limit);
  if (db_num_rows($result) == 0) {
    unset($_SESSION['nodereference_update_2']);
    unset($_SESSION['nodereference_update_2_max']);
    return array();
  }
  while ($data = db_fetch_object($result)) {
    $_SESSION['nodereference_update_2']++;
    db_query("UPDATE {node_field_nodereference_data} SET nid = %d WHERE vid = %d AND field_name = '%s' AND delta = %d", $data->nid, $data->vid, $data->field_name, $data->delta);
  }

  return array('#finished' => $_SESSION['nodereference_update_2'] / $_SESSION['nodereference_update_2_max']);
}

/**
 * Data is now stored in per-field tables.
 */
function nodereference_update_3() {
  include_once('./'. drupal_get_path('module', 'content') .'/content.module');
  $ret = array();
  if (!db_table_exists('node_field_nodereference_data')) {
   return $ret;
  }

  content_clear_type_cache();
  $fields = content_fields();
  foreach ($fields as $field) {
    switch ($field['type']) {
      case 'nodereference':
        $db_info = content_database_info($field);
        $table = $db_info['table'];
        db_create_table($ret, $table, _content_table_schema($field));
        if ($field['multiple']) {
          $ret[] = update_sql('INSERT INTO {'. $table .'} (vid, delta, nid, '. $field['field_name'] ."_nid) SELECT vid, delta, nid, field_nid FROM {node_field_nodereference_data} WHERE field_name = '". $field['field_name'] ."'");
        }
        else {
          $ret[] = update_sql('INSERT INTO {'. $table .'} (vid, nid, '. $field['field_name'] ."_nid) SELECT vid, nid, field_nid FROM {node_field_nodereference_data} WHERE field_name = '". $field['field_name'] ."'");
        }
        break;
    }
  }
  db_drop_table($ret, 'node_field_nodereference_data');
  db_query('DELETE FROM {cache}');
  return $ret;
}

/**
 * All fields must allow NULL values to indicate empty fields.
 */
function nodereference_update_6000() {
  include_once('./'. drupal_get_path('module', 'content') .'/content.module');
  $ret = array();

  content_clear_type_cache();
  $fields = content_fields();
  foreach ($fields as $field) {
    switch ($field['type']) {
      case 'nodereference':
        $db_info = content_database_info($field);
        $table = $db_info['table'];
        db_change_field($ret, $table, 'nid', 'nid', array('type' => 'int', 'not null' => FALSE));
        $ret[] = update_sql("UPDATE {". $db_info['table'] ."} SET ". $db_info['columns']['nid']['column'] ." = NULL WHERE ". $db_info['columns']['nid']['column'] ." = 0");
    }
  }
  return $ret;
}