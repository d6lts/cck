<?php
// $Id$

/**
 * @file
 * Defines a field type for referencing a user from a node.
 */

/**
 * Implementation of hook_help().
 */
function userreference_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Defines a field type for referencing a user from a node. <em>Note: Requires content.module.</em>');
  }
}

/**
 * Implementation of hook_field_info().
 */
function userreference_field_info() {
  return array(
    'userreference' => array('label' => 'User Reference'),
  );
}

/**
 * Implementation of hook_field_settings().
 */
function userreference_field_settings($op, $field) {
  switch ($op) {
    case 'database columns':
      $columns = array(
        'uid' => array('type' => 'int', 'not null' => TRUE, 'default' => '0'),
      );
      return $columns;
  }
}

/**
 * Implementation of hook_field().
 */
function userreference_field($op, &$node, $field, $a2, $a3, $a4) {
  switch ($op) {
    case 'view':
      $node_field = $node->$field['field_name'];
      if ($field['multiple']) {
        $node_field_transposed = content_transpose_array_rows_cols($node_field);
        $uids = $node_field_transposed['uid'];
      }
      else {
        $uids = array($node_field['uid']);
      }

      $user_array = array();

      foreach ($uids as $referenced_uid) {
        if ($referenced_uid) {
          $referenced_user = user_load(array('uid' => $referenced_uid));
          $user_array[] = theme('username', $referenced_user);
        }
      }

      $node_field['view'] = theme('item_list', $user_array);
      $node->$field['field_name'] = $node_field;
      return '<div class="'. $field['field_name'] .'">'. $node_field['view'] .'</div>';
  }
}


/**
 * Implementation of hook_widget_info().
 */
function userreference_widget_info() {
  return array(
    'userreference_select' => array(
      'label' => 'Select List',
      'field types' => array('userreference'),
    ),
    'userreference_autocomplete' => array(
      'label' => 'Autocomplete Text Field',
      'field types' => array('userreference'),
    ),
  );
}

/**
 * Implementation of hook_widget().
 */
function userreference_widget($op, &$node, $field) {
  if ($field['widget']['type'] == 'userreference_select' || $field['multiple']) {
    switch ($op) {
      case 'form':
        $form = array();
        $node_field = $node->$field['field_name'];
        if ($field['multiple']) {
          $node_field_transposed = content_transpose_array_rows_cols($node_field);
          $uids = $node_field_transposed['uid'];
        }
        else {
          $uids = array($node_field['uid']);
        }

        $form[$field['field_name']] = array('#tree' => TRUE);
        $form[$field['field_name']]['uids'] = array(
          '#type' => 'select',
          '#title' => t($field['widget']['label']),
          '#default_value' => $uids,
          '#multiple' => $field['multiple'],
          '#options' => _userreference_potential_references($field),
          '#required' => $field['required'],
          '#description' => $field['widget']['description'],
        );

        return $form;

      case 'validate':
        return;
      
      case 'submit':
        $node_field = $node->$field['field_name'];

        if ($field['multiple']) {
          $node_field = content_transpose_array_rows_cols(array('uid' => $node_field['uids']));
        }
        else {
          $node_field['uid'] = array_pop($node_field['uids']);
        }
        $node->$field['field_name'] = $node_field;
    }
  }
  else {
    switch ($op) {
      case 'form':
        $form = array();
        $node_field = $node->$field['field_name'];

        $user_name = db_result(db_query("SELECT name FROM {users} WHERE uid = '%d'", $node_field['uid']));
        $form[$field['field_name']] = array('#tree' => TRUE);
        $form[$field['field_name']]['user_name'] = array(
          '#type' => 'textfield',
          '#title' => t($field['widget']['label']),
          '#maxlength' => 60,
          '#autocomplete_path' => 'user/autocomplete',
          '#default_value' => $user_name ? $user_name : '',
          '#required' => $field['required'],
          '#description' => $field['widget']['description'],
        );
        return $form;

      case 'validate':
        $node_field = $node->$field['field_name'];
        if ($node_field['user_name'] && !in_array($node_field['user_name'], _userreference_potential_references($field))) {
          form_set_error($field['field_name'], t('Invalid user name.'));
        }
        return;
      
      case 'submit':
        $node_field = $node->$field['field_name'];
        
        $uid = db_result(db_query("SELECT uid FROM {users} WHERE name = '%s'", $node_field['user_name']));
        if ($uid) {
          $node_field['uid'] = $uid;
        }

        $node->$field['field_name'] = $node_field;
    }
  }
}


/**
 * Fetch an array of all candidate referenced users, for use in presenting the selection form to the user.
 */
function _userreference_potential_references($field) {
  $result = db_query("SELECT u.name, u.uid FROM {users} u WHERE uid > 0 ORDER BY u.name ASC");

  $rows = array();

  while ($user = db_fetch_object($result)) {
    $rows[$user->uid] = $user->name;
  }

  return $rows;
}

function userreference_referenced_by_list($uid, $content_type = '') {
  if ($content_type) {
    $result = db_query("SELECT n.* FROM {node_field_userreference_data} user_ref INNER JOIN {node} n ON n.vid = user_ref.vid AND n.type = '%s' WHERE user_ref.field_uid = %d ORDER BY n.type, delta", $content_type, $uid);
  }
  else {
    $result = db_query("SELECT n.* FROM {node_field_userreference_data} user_ref INNER JOIN {node} n ON n.vid = user_ref.vid WHERE user_ref.field_uid = %d ORDER BY n.type, delta", $uid);
  }

  $values = array();

  while ($value = db_fetch_object($result)) {
    $values[] = $value;
  }

  return $values;
}
